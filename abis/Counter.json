{
  "address": "0xf05CBB778d24dF9C935b6f94405D21641570bfEE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7446dd8e2106ed839e4a406da11bd0cb5391f5a523996aa2ca6c6c115baff2b0",
  "receipt": {
    "to": null,
    "from": "0xc102f76973f4890cAB1b5d1ed26F3623381983aF",
    "contractAddress": "0xf05CBB778d24dF9C935b6f94405D21641570bfEE",
    "transactionIndex": 20,
    "gasUsed": "315686",
    "logsBloom": "0x
    "blockHash": "0xd3d05b3eb560e5ffa8822d797169611bce6ea468b72339073539e08a85a1fdfe",
    "transactionHash": "0x7446dd8e2106ed839e4a406da11bd0cb5391f5a523996aa2ca6c6c115baff2b0",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 25489781,
        "transactionHash": "0x7446dd8e2106ed839e4a406da11bd0cb5391f5a523996aa2ca6c6c115baff2b0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c102f76973f4890cab1b5d1ed26f3623381983af",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000166e4b7d8c3fec00000000000000000000000000000000000000000000000001f630fb47d8e3220000000000000000000000000000000000000000000009ffeba67746fea57b4000000000000000000000000000000000000000000000000001dfc2afca4ca3360000000000000000000000000000000000000000000009ffebbce5927c31bb2c",
        "logIndex": 147,
        "blockHash": "0xd3d05b3eb560e5ffa8822d797169611bce6ea468b72339073539e08a85a1fdfe"
      }
    ],
    "blockNumber": 25489781,
    "cumulativeGasUsed": "5166048",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7bC5a85d3Fd6A50F4085bc97320fEC88409d76a9"
  ],
  "numDeployments": 10,
  "solcInputHash": "13c3ce14264c493e3f32bf9648c878da",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Counter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"./EssentialERC2771Context.sol\\\";\\n\\ncontract Counter is EssentialERC2771Context {\\n    mapping(address => uint256) public count;\\n    mapping(address => mapping(uint256 => address)) internal registeredNFTs;\\n\\n    event Received(address indexed contractAddress);\\n\\n    modifier onlyForwarder() {\\n        require(isTrustedForwarder(msg.sender), \\\"Counter:429\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) EssentialERC2771Context(trustedForwarder) {}\\n\\n    function increment() external onlyForwarder {\\n        emit Received(_msgNFTContract());\\n        // registeredNFTs[nft.contractAddress][nft.tokenId] = _msgSender();\\n        count[_msgSender()] += 1;\\n    }\\n}\\n\",\"keccak256\":\"0xe5145708090e65ddbde3b8d4acf8c7bdc2333acfa0304eb84c3ce301aad58246\",\"license\":\"Unlicense\"},\"src/EssentialERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"./IForwardRequest.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract EssentialERC2771Context is Context {\\n    address private _trustedForwarder;\\n    address public owner;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"403\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) {\\n        owner = msg.sender;\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function setTrustedForwarder(address trustedForwarder) external onlyOwner {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            assembly {\\n                sender := shr(0x60, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 40];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n\\n    function _msgNFTContract() internal view returns (address contractAddress) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            assembly {\\n                contractAddress := shr(0x60, calldataload(sub(calldatasize(), 40)))\\n            }\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    // function _msgNFT() internal pure returns (IForwardRequest.NFT memory) {\\n    //     bytes calldata payload = msg.data[msg.data.length - 72:msg.data.length - 20];\\n    //     (address contractAddress, uint256 tokenId) = abi.decode(payload, (address, uint256));\\n    //     return IForwardRequest.NFT({contractAddress: contractAddress, tokenId: tokenId});\\n    // }\\n}\\n\",\"keccak256\":\"0x4c70bb01f4b7e76d08f517ece4911307e32cc72bc62e59742e0b7ae0092c66d7\",\"license\":\"MIT\"},\"src/IForwardRequest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\ninterface IForwardRequest {\\n    struct ForwardRequest {\\n        address from; // Externally-owned account (EOA) signing the request.\\n        address authorizer; // Externally-owned account (EOA) that authorized from account in PlaySession.\\n        address to; // Destination address, normally a smart contract for an nFight game.\\n        address nftContract; // The ETH Mainnet address of the NFT contract for the token being used.\\n        uint256 tokenId; // The tokenId of the ETH Mainnet NFT being used\\n        uint256 value; // Amount of ether to transfer to the destination.\\n        uint256 gas; // Amount of gas limit to set for the execution.\\n        uint256 nonce; // On-chain tracked nonce of a transaction.\\n        bytes data; // (Call)data to be sent to the destination.\\n    }\\n\\n    struct PlaySession {\\n        address authorized; // Burner EOA that is authorized to play with NFTs by owner EOA.\\n        uint256 expiresAt; // block timestamp when the session is invalidated.\\n    }\\n\\n    struct NFT {\\n        address contractAddress;\\n        uint256 tokenId;\\n    }\\n}\\n\",\"keccak256\":\"0x1b60c931451e592ac961a5f1f5350da915b9a0a382c8a75cc109b18e29ef1807\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161049038038061049083398101604081905261002f91610062565b600180546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6103ef806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a36600461034a565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad36600461034a565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b61010461011436600461034a565b610213565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61019a6102c1565b6001600160a01b03167f7c6a000d6581009ece38db2bf0a802db87c25d55bdf668f06a962b9c7188477360405160405180910390a26001600260006101dd610306565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461020c919061037a565b9091555050565b6001546001600160a01b03163314610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b031633141561030057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd836013560601c90565b50600090565b600080546001600160a01b031633141561034557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006020828403121561035c57600080fd5b81356001600160a01b038116811461037357600080fd5b9392505050565b600082198211156103b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220d35d7c311fe053ca28770206bdd4d188ba919bc5e533858a01104598c718611a64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a36600461034a565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad36600461034a565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b61010461011436600461034a565b610213565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61019a6102c1565b6001600160a01b03167f7c6a000d6581009ece38db2bf0a802db87c25d55bdf668f06a962b9c7188477360405160405180910390a26001600260006101dd610306565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461020c919061037a565b9091555050565b6001546001600160a01b03163314610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b031633141561030057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd836013560601c90565b50600090565b600080546001600160a01b031633141561034557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006020828403121561035c57600080fd5b81356001600160a01b038116811461037357600080fd5b9392505050565b600082198211156103b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220d35d7c311fe053ca28770206bdd4d188ba919bc5e533858a01104598c718611a64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1254,
        "contract": "src/Counter.sol:Counter",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1256,
        "contract": "src/Counter.sol:Counter",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1195,
        "contract": "src/Counter.sol:Counter",
        "label": "count",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1201,
        "contract": "src/Counter.sol:Counter",
        "label": "registeredNFTs",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}