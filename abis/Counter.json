{
  "address": "0x7dBE4c461FCb78c71a86ff6ed4031B485b842a4d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "nftData",
          "type": "bytes"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc9089056c39f226c9c58c4619905ad97e81494929e38e974dfd854a64f4c364c",
  "receipt": {
    "to": null,
    "from": "0xc102f76973f4890cAB1b5d1ed26F3623381983aF",
    "contractAddress": "0x7dBE4c461FCb78c71a86ff6ed4031B485b842a4d",
    "transactionIndex": 9,
    "gasUsed": "328418",
    "logsBloom": "0x
    "blockHash": "0x3a6d591d6b6e80ed725f788a5ef3f9a7e7f08138d67fc3a6562c9fdfc7adff97",
    "transactionHash": "0xc9089056c39f226c9c58c4619905ad97e81494929e38e974dfd854a64f4c364c",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 25489444,
        "transactionHash": "0xc9089056c39f226c9c58c4619905ad97e81494929e38e974dfd854a64f4c364c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c102f76973f4890cab1b5d1ed26f3623381983af",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001755e37c4867a400000000000000000000000000000000000000000000000002a2b914f4aa231f0000000000000000000000000000000000000000000009fde94fc139e100a1d2000000000000000000000000000000000000000000000000028b63317861bb7b0000000000000000000000000000000000000000000009fde967171d5d490976",
        "logIndex": 118,
        "blockHash": "0x3a6d591d6b6e80ed725f788a5ef3f9a7e7f08138d67fc3a6562c9fdfc7adff97"
      }
    ],
    "blockNumber": 25489444,
    "cumulativeGasUsed": "2592682",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbfB8f916F41888AB2D91F3aE0327FE282665CA63"
  ],
  "numDeployments": 9,
  "solcInputHash": "462a23228758c2b7aa35e5112d1f80e2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"nftData\",\"type\":\"bytes\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Counter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"./EssentialERC2771Context.sol\\\";\\n\\ncontract Counter is EssentialERC2771Context {\\n    mapping(address => uint256) public count;\\n    mapping(address => mapping(uint256 => address)) internal registeredNFTs;\\n\\n    event Received(bytes indexed nftData);\\n\\n    modifier onlyForwarder() {\\n        require(isTrustedForwarder(msg.sender), \\\"Counter:429\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) EssentialERC2771Context(trustedForwarder) {}\\n\\n    function increment() external onlyForwarder {\\n        emit Received(msg.data[msg.data.length - 40:msg.data.length - 20]);\\n        // registeredNFTs[nft.contractAddress][nft.tokenId] = _msgSender();\\n        count[_msgSender()] += 1;\\n    }\\n}\\n\",\"keccak256\":\"0x7928b9443ef64e52685e993db654930f06927f77da06e6154a99a6221adce3c5\",\"license\":\"Unlicense\"},\"src/EssentialERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"./IForwardRequest.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract EssentialERC2771Context is Context {\\n    address private _trustedForwarder;\\n    address public owner;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"403\\\");\\n        _;\\n    }\\n\\n    constructor(address trustedForwarder) {\\n        owner = msg.sender;\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function setTrustedForwarder(address trustedForwarder) external onlyOwner {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 40];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n\\n    // function _msgNFTContract() internal view returns (address) {\\n    //     if (isTrustedForwarder(msg.sender)) {\\n    //         return msg.data[msg.data.length - 40:msg.data.length - 20]);\\n    //     } else {\\n    //         return super._msgData();\\n    //     }\\n    // }\\n\\n    // function _msgNFT() internal pure returns (IForwardRequest.NFT memory) {\\n    //     bytes calldata payload = msg.data[msg.data.length - 72:msg.data.length - 20];\\n    //     (address contractAddress, uint256 tokenId) = abi.decode(payload, (address, uint256));\\n    //     return IForwardRequest.NFT({contractAddress: contractAddress, tokenId: tokenId});\\n    // }\\n}\\n\",\"keccak256\":\"0xa428031c8ba7eaa9430b2efeb90180fde258bad0a81ddfcb31e5b4c708f33a84\",\"license\":\"MIT\"},\"src/IForwardRequest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\ninterface IForwardRequest {\\n    struct ForwardRequest {\\n        address from; // Externally-owned account (EOA) signing the request.\\n        address authorizer; // Externally-owned account (EOA) that authorized from account in PlaySession.\\n        address to; // Destination address, normally a smart contract for an nFight game.\\n        address nftContract; // The ETH Mainnet address of the NFT contract for the token being used.\\n        uint256 tokenId; // The tokenId of the ETH Mainnet NFT being used\\n        uint256 value; // Amount of ether to transfer to the destination.\\n        uint256 gas; // Amount of gas limit to set for the execution.\\n        uint256 nonce; // On-chain tracked nonce of a transaction.\\n        bytes data; // (Call)data to be sent to the destination.\\n    }\\n\\n    struct PlaySession {\\n        address authorized; // Burner EOA that is authorized to play with NFTs by owner EOA.\\n        uint256 expiresAt; // block timestamp when the session is invalidated.\\n    }\\n\\n    struct NFT {\\n        address contractAddress;\\n        uint256 tokenId;\\n    }\\n}\\n\",\"keccak256\":\"0x1b60c931451e592ac961a5f1f5350da915b9a0a382c8a75cc109b18e29ef1807\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104cb3803806104cb83398101604081905261002f91610062565b600180546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b61042a806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a36600461032c565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad36600461032c565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b61010461011436600461032c565b61023a565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000366101a060288261038b565b906101ac60143661038b565b926101b9939291906103a2565b6040516101c79291906103cc565b604051908190038120907e8c945028a0dff69f1ba4ca539d79d3548a9a93a8db7ebfb097e6c5be4ccf5d90600090a26001600260006102046102e8565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461023391906103dc565b9091555050565b6001546001600160a01b031633146102ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b031633141561032757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006020828403121561033e57600080fd5b81356001600160a01b038116811461035557600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561039d5761039d61035c565b500390565b600080858511156103b257600080fd5b838611156103bf57600080fd5b5050820193919092039150565b8183823760009101908152919050565b600082198211156103ef576103ef61035c565b50019056fea2646970667358221220082a395a7ff134491261eb8b6af398db5bc47a8650a7c4386798812545d1559864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d1578063d09de08a146100fc578063da7422281461010657600080fd5b806305d85eda1461006c578063572b6c051461009f575b600080fd5b61008c61007a36600461032c565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c16100ad36600461032c565b6000546001600160a01b0391821691161490565b6040519015158152602001610096565b6001546100e4906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b610104610119565b005b61010461011436600461032c565b61023a565b6000546001600160a01b03163314610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f436f756e7465723a34323900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000366101a060288261038b565b906101ac60143661038b565b926101b9939291906103a2565b6040516101c79291906103cc565b604051908190038120907e8c945028a0dff69f1ba4ca539d79d3548a9a93a8db7ebfb097e6c5be4ccf5d90600090a26001600260006102046102e8565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461023391906103dc565b9091555050565b6001546001600160a01b031633146102ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f34303300000000000000000000000000000000000000000000000000000000006044820152606401610189565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546001600160a01b031633141561032757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006020828403121561033e57600080fd5b81356001600160a01b038116811461035557600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561039d5761039d61035c565b500390565b600080858511156103b257600080fd5b838611156103bf57600080fd5b5050820193919092039150565b8183823760009101908152919050565b600082198211156103ef576103ef61035c565b50019056fea2646970667358221220082a395a7ff134491261eb8b6af398db5bc47a8650a7c4386798812545d1559864736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1265,
        "contract": "src/Counter.sol:Counter",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1267,
        "contract": "src/Counter.sol:Counter",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1195,
        "contract": "src/Counter.sol:Counter",
        "label": "count",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1201,
        "contract": "src/Counter.sol:Counter",
        "label": "registeredNFTs",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}